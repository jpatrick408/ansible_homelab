- name: Adding Docker Repository (Fedora based)
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/fedora/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo
  when: ansible_os_family == "RedHat"

- name: Installing Docker Dependencies (Debian Based)
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
  when: ansible_os_family == "Debian"

- name: Adding Docker Key to keyring (Debian Based)
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0440'
  when: ansible_os_family == "Debian"

- name: Creating Docker Source File (Debian Based)
  ansbible.builtin.file:
    path: /etc/apt/sources.list.d/docker.list
    state: touch
  when: ansible_os_family == "Debian"

# Update with Ubuntu version as needed
- name: Adding Docker Source (Debian Based)
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list.d/docker.list
    line: 'deb [arch=amd64 signed-by/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu noble stable'
  when: ansible_os_family == "Debian"

- name: Installing Docker (Fedora based)
  ansible.builtin.package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    update_cache: yes
#  when: ansible_os_family == "RedHat"


- name: Enabling Docker Containerd Service
  ansible.builtin.systemd_service:
    name: containerd
    enabled: true

- name: Enabling Docker Service
  ansible.builtin.systemd_service:
    name: docker
    enabled: true

- name: Adding User to Docker Group
  ansible.builtin.user:
    name: "{{ invoking_user }}"
    groups: docker
    append: yes
